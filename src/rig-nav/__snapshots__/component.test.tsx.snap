// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<RigNavComponent /> renders correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <RigNavComponent
    configHandler={[Function]}
    error=""
    liveConfigHandler={[Function]}
    manifest={
        Object {
            "anchor": "panel",
            "authorName": "test",
            "bitsEnabled": true,
            "canInstall": true,
            "configUrl": "test",
            "description": "test",
            "eulaTosUrl": "test.com",
            "iconUrl": "test.com",
            "iconUrls": Object {},
            "id": "test",
            "installationCount": 0,
            "liveConfigUrl": "test.com",
            "name": "test",
            "panelHeight": 300,
            "privacyPolicyUrl": "test.com",
            "requestIdentityLink": false,
            "requiredBroadcasterAbilities": Array [
              "test",
            ],
            "screenshotUrls": Array [
              "test.png",
            ],
            "sku": "test",
            "state": "test",
            "summary": "test",
            "supportEmail": "test",
            "vendorCode": "test",
            "version": "0.0.1",
            "views": Object {
              "component": Object {
                "aspectHeight": 3000,
                "aspectWidth": 2500,
                "viewerUrl": "test",
                "zoom": false,
              },
              "config": Object {
                "viewerUrl": "test",
              },
              "liveConfig": Object {
                "viewerUrl": "test",
              },
              "panel": Object {
                "viewerUrl": "test",
              },
            },
            "whitelistedConfigUrls": Array [],
            "whitelistedPanelUrls": Array [],
          }
    }
    openConfigurationsHandler={[Function]}
    openProductManagementHandler={[Function]}
    selectedView="Extension Views"
    session={
        Object {
            "authToken": "test",
            "login": "test",
            "profileImageUrl": "test.png",
          }
    }
    viewerHandler={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="personal-bar"
>
          <Connect(MockApiDropdownComponent) />
          <div
                    className="personal-bar__configurations"
                    onClick={[Function]}
                    title="Configurations"
          >
                    <img
                              alt="Configurations"
                              height={24}
                              src="gear.svg"
                              width={24}
                    />
          </div>
          <div
                    className="personal-bar__ext-name"
          >
                    <span>
                              test
                    </span>
          </div>
          <div
                    className="top-nav-item__login"
          >
                    <Connect(UserDropdownComponent)
                              session={
                                        Object {
                                                  "authToken": "test",
                                                  "login": "test",
                                                  "profileImageUrl": "test.png",
                                                }
                              }
                    />
          </div>
</div>,
        <div
          className="top-nav__item-container"
>
          <a
                    className="offset top-nav-item top-nav-item__selected"
                    onClick={[Function]}
          >
                    Extension Views
          </a>
          <a
                    className="top-nav-item"
                    onClick={[Function]}
          >
                    Manage Bits Products
          </a>
</div>,
      ],
      "className": "top-nav",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <Connect(MockApiDropdownComponent) />,
            <div
              className="personal-bar__configurations"
              onClick={[Function]}
              title="Configurations"
>
              <img
                            alt="Configurations"
                            height={24}
                            src="gear.svg"
                            width={24}
              />
</div>,
            <div
              className="personal-bar__ext-name"
>
              <span>
                            test
              </span>
</div>,
            <div
              className="top-nav-item__login"
>
              <Connect(UserDropdownComponent)
                            session={
                                          Object {
                                                        "authToken": "test",
                                                        "login": "test",
                                                        "profileImageUrl": "test.png",
                                                      }
                            }
              />
</div>,
          ],
          "className": "personal-bar",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <img
                alt="Configurations"
                height={24}
                src="gear.svg"
                width={24}
/>,
              "className": "personal-bar__configurations",
              "onClick": [Function],
              "title": "Configurations",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "alt": "Configurations",
                "height": 24,
                "src": "gear.svg",
                "width": 24,
              },
              "ref": null,
              "rendered": null,
              "type": "img",
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <span>
                test
</span>,
              "className": "personal-bar__ext-name",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "test",
              },
              "ref": null,
              "rendered": "test",
              "type": "span",
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Connect(UserDropdownComponent)
                session={
                                Object {
                                                "authToken": "test",
                                                "login": "test",
                                                "profileImageUrl": "test.png",
                                              }
                }
/>,
              "className": "top-nav-item__login",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "session": Object {
                  "authToken": "test",
                  "login": "test",
                  "profileImageUrl": "test.png",
                },
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <a
              className="offset top-nav-item top-nav-item__selected"
              onClick={[Function]}
>
              Extension Views
</a>,
            <a
              className="top-nav-item"
              onClick={[Function]}
>
              Manage Bits Products
</a>,
          ],
          "className": "top-nav__item-container",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Extension Views",
              "className": "offset top-nav-item top-nav-item__selected",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "Extension Views",
            "type": "a",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Manage Bits Products",
              "className": "top-nav-item",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "Manage Bits Products",
            "type": "a",
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="personal-bar"
>
            <Connect(MockApiDropdownComponent) />
            <div
                        className="personal-bar__configurations"
                        onClick={[Function]}
                        title="Configurations"
            >
                        <img
                                    alt="Configurations"
                                    height={24}
                                    src="gear.svg"
                                    width={24}
                        />
            </div>
            <div
                        className="personal-bar__ext-name"
            >
                        <span>
                                    test
                        </span>
            </div>
            <div
                        className="top-nav-item__login"
            >
                        <Connect(UserDropdownComponent)
                                    session={
                                                Object {
                                                            "authToken": "test",
                                                            "login": "test",
                                                            "profileImageUrl": "test.png",
                                                          }
                                    }
                        />
            </div>
</div>,
          <div
            className="top-nav__item-container"
>
            <a
                        className="offset top-nav-item top-nav-item__selected"
                        onClick={[Function]}
            >
                        Extension Views
            </a>
            <a
                        className="top-nav-item"
                        onClick={[Function]}
            >
                        Manage Bits Products
            </a>
</div>,
        ],
        "className": "top-nav",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <Connect(MockApiDropdownComponent) />,
              <div
                className="personal-bar__configurations"
                onClick={[Function]}
                title="Configurations"
>
                <img
                                alt="Configurations"
                                height={24}
                                src="gear.svg"
                                width={24}
                />
</div>,
              <div
                className="personal-bar__ext-name"
>
                <span>
                                test
                </span>
</div>,
              <div
                className="top-nav-item__login"
>
                <Connect(UserDropdownComponent)
                                session={
                                                Object {
                                                                "authToken": "test",
                                                                "login": "test",
                                                                "profileImageUrl": "test.png",
                                                              }
                                }
                />
</div>,
            ],
            "className": "personal-bar",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <img
                  alt="Configurations"
                  height={24}
                  src="gear.svg"
                  width={24}
/>,
                "className": "personal-bar__configurations",
                "onClick": [Function],
                "title": "Configurations",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "alt": "Configurations",
                  "height": 24,
                  "src": "gear.svg",
                  "width": 24,
                },
                "ref": null,
                "rendered": null,
                "type": "img",
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <span>
                  test
</span>,
                "className": "personal-bar__ext-name",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "test",
                },
                "ref": null,
                "rendered": "test",
                "type": "span",
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <Connect(UserDropdownComponent)
                  session={
                                    Object {
                                                      "authToken": "test",
                                                      "login": "test",
                                                      "profileImageUrl": "test.png",
                                                    }
                  }
/>,
                "className": "top-nav-item__login",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "session": Object {
                    "authToken": "test",
                    "login": "test",
                    "profileImageUrl": "test.png",
                  },
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <a
                className="offset top-nav-item top-nav-item__selected"
                onClick={[Function]}
>
                Extension Views
</a>,
              <a
                className="top-nav-item"
                onClick={[Function]}
>
                Manage Bits Products
</a>,
            ],
            "className": "top-nav__item-container",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Extension Views",
                "className": "offset top-nav-item top-nav-item__selected",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "Extension Views",
              "type": "a",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Manage Bits Products",
                "className": "top-nav-item",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "Manage Bits Products",
              "type": "a",
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
